name: Windows Build & Package

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  win:
    runs-on: windows-latest

    # ────────────────  global env ────────────────
    env:
      BUILD_TYPE: Release
      
      VCPKG_NUGET_CACHE: ${{ github.workspace }}/vcpkg-cache
      
      VCPKG_BINARY_SOURCES: >-
        clear;
        nuget,https://vcpkg-cache.azureedge.net/,read;
        nuget,${{ github.workspace }}/vcpkg-cache,write

    steps:
    # ─────────────── checkout ───────────────
    - uses: actions/checkout@v4

    # optional: quick visual check in the log
    - name: Show where the manifest is
      shell: pwsh
      run: |
        Write-Host "Workspace = $Env:GITHUB_WORKSPACE"
        Get-ChildItem -Path "$Env:GITHUB_WORKSPACE" -Filter vcpkg.json -Recurse -Depth 2

    # ────────── restore caches BEFORE vcpkg runs ──────────
    - name: Cache vcpkg tree
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/vcpkg
        key: vcpkg-tree-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
        restore-keys: vcpkg-tree-${{ runner.os }}-

    - name: Cache vcpkg binary packages
      uses: actions/cache@v4
      with:
        path: ${{ env.VCPKG_NUGET_CACHE }}
        key: vcpkg-bins-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
        restore-keys: vcpkg-bins-${{ runner.os }}-

    # ──────────────── dependencies ────────────────
    - uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: ${{ github.workspace }}/vcpkg
        vcpkgGitCommitId: c6f09fc73ebfbfddd769f8fac9f33f95304c77e5   # keep pinned for stable ABI

    - uses: jurplel/install-qt-action@v4
      with:
        version: 6.9.0           # keep in sync with your dev box
        host: windows
        dir: ${{ runner.temp }}/Qt

    # ─────────────── configure & build ───────────────
    - name: Configure
      run: >
        cmake -B build -S .
        -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
        -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: cmake --build build --config ${{ env.BUILD_TYPE }} --parallel

    # ─────────────── bundle Qt & runtime DLLs ───────────────
    - name: Bundle runtime libs
      run: |
        set PATH=%PATH%;${{ runner.temp }}\Qt\6.9.0\msvc2019_64\bin
        windeployqt --release --qmldir . ^
          build\bin\RoboticsSoftware.exe
        copy README.md build\bin\

    # ─────────────── build installer / upload artifact ───────────────
    - name: Build installer
      run: iscc packaging/InnoSetup.iss

    - uses: actions/upload-artifact@v4
      with:
        name: KRStudio-win64
        path: dist/installer/*.exe
