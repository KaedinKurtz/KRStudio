name: Windows Build & Package

on:
  push: { branches: [main] }
  pull_request:
  workflow_dispatch:
  release: { types: [created] }

jobs:
  win:
    runs-on: windows-latest
    env:
      BUILD_TYPE: Release
    steps:

      # 1. Normal checkout (no --recursive needed any more)
      - uses: actions/checkout@v4
        with:
         fetch-depth: 0 

      # 2. vcpkg – unchanged
      - uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{github.workspace}}/vcpkg
          vcpkgGitCommitId: c6f09fc73ebfbfddd769f8fac9f33f95304c77e5   # pin you picked

      # 3. Qt – unchanged
      - uses: jurplel/install-qt-action@v4
        with:
          version: 6.9.0
          host: windows
          dir: ${{runner.temp}}/Qt

      # 4. Configure + build – nothing to add;
      #    FetchContent fetches ADS automatically.
      - name: Configure
        run: >
          cmake -B build -S .
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: cmake --build build --config ${{env.BUILD_TYPE}} --parallel

    # ─────────────── bundle Qt & runtime DLLs ───────────────
      - name: Bundle runtime libs
        run: |
         set PATH=%PATH%;${{ runner.temp }}\Qt\6.9.0\msvc2019_64\bin
         windeployqt --release --qmldir . ^
         build\bin\RoboticsSoftware.exe
         copy README.md build\bin\

    # ─────────────── build installer / upload artifact ───────────────
      - name: Build installer
        run: iscc packaging/InnoSetup.iss

      - uses: actions/upload-artifact@v4
        with:
          name: KRStudio-win64
          path: dist/installer/*.exe
