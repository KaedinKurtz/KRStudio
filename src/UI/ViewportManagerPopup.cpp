#include "ViewportManagerPopup.hpp"
#include "ui_ViewportManagerWidget.h"    // <-- generated by uic from ViewportManagerWidget.ui

#include <QToolButton>
#include <QGridLayout>
#include <QLayout>
#include "ViewportWidget.hpp"            // for qobject_cast<ViewportWidget*>
#include "Scene.hpp"                     // full Scene type
#include "components.hpp"                // CameraComponent
#include <DockManager.h>
#include <DockWidget.h>

ViewportManagerPopup::ViewportManagerPopup(QWidget* parent)
    : QWidget(parent),
    ui(new Ui::ViewportManagerWidget())
{
    ui->setupUi(this);

    // wire up the three fixed buttons
    connect(ui->addViewportButton, &QPushButton::clicked,
        this, &ViewportManagerPopup::addViewportRequested);
    connect(ui->removeViewportButton, &QPushButton::clicked,
        this, &ViewportManagerPopup::removeViewportRequested);
    connect(ui->resetButton, &QPushButton::clicked,
        this, &ViewportManagerPopup::resetViewportsRequested);
}

ViewportManagerPopup::~ViewportManagerPopup()
{
    delete ui; // clean up the generated UI object
}

void ViewportManagerPopup::updateUi(const QList<ads::CDockWidget*>& viewportDocks,
    Scene* scene)
{
    // 1) Update the counter label
    ui->ViewportNumberLabel
        ->setText(QString("[ %1 ]").arg(viewportDocks.size()));

    // 2) Clear out the old “Show N” buttons
    clearLayout(ui->activeViewportWidget);

    // 3) Rebuild them
    int row = 0, col = 0;
    for (int i = 0; i < viewportDocks.size(); ++i) {
        auto* dock = viewportDocks.at(i);
        auto* vp = qobject_cast<ViewportWidget*>(dock->widget());
        if (!vp || !scene) continue;

        // create the button
        QPushButton* btn = new QPushButton(QString("Show %1").arg(i + 1));
        btn->setMaximumHeight(25);

        // fetch camera tint
        auto& reg = scene->getRegistry();
        auto& cam = reg.get<CameraComponent>(vp->getCameraEntity());
        QColor tint; tint.setRgbF(cam.tint.r, cam.tint.g, cam.tint.b);
        QString fg = tint.lightnessF() > 0.5 ? "#000" : "#fff";

        btn->setStyleSheet(QString("background:%1; color:%2;")
            .arg(tint.name(), fg));

        connect(btn, &QPushButton::clicked, this, [this, dock]() {
            emit showViewportRequested(dock);
            });

        ui->activeViewportWidget->addWidget(btn, row, col);
        if (++col >= 3) { col = 0; ++row; }
    }
}

void ViewportManagerPopup::clearLayout(QLayout* layout)
{
    if (!layout) return;
    while (auto* item = layout->takeAt(0)) {
        if (auto* w = item->widget())
            w->deleteLater();
        delete item;
    }
}
